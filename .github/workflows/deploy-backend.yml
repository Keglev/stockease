name: Migrate and Deploy Backend

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  migrate-and-deploy:
    runs-on: ubuntu-latest
    env:
      # These should be configured as repository secrets
      NEON_JDBC_URL: ${{ secrets.NEON_JDBC_URL }}
      NEON_USER: ${{ secrets.NEON_USER }}
      NEON_PASSWORD: ${{ secrets.NEON_PASSWORD }}
      KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Flyway migrations (Docker)
        # Uses the Flyway Docker image to run migrations from the repo against Neon
        run: |
          echo "Running Flyway migrations against Neon"
          docker run --rm -v ${{ github.workspace }}/src/main/resources/db/migration:/flyway/sql \
            flyway/flyway \
            -url="${{ env.NEON_JDBC_URL }}" \
            -user="${{ env.NEON_USER }}" -password="${{ env.NEON_PASSWORD }}" \
            -locations=filesystem:/flyway/sql migrate

      - name: Make mvnw executable
        run: |
          chmod +x ./mvnw

      - name: Build backend JAR
        working-directory: .
        run: |
          ./mvnw -DskipTests package

      - name: Build & push Docker image
        env:
          IMAGE: ghcr.io/${{ github.repository_owner }}/stockease:${{ github.sha }}
        run: |
          echo "Building Docker image: $IMAGE"
          # Build using the backend Dockerfile (context is repo root)
          docker build -f ./backend/Dockerfile -t "$IMAGE" ./backend
          echo "Logging in to GHCR"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          echo "Pushing image to GHCR"
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Install Koyeb CLI
        run: |
          curl -fsSL https://cli.koyeb.com/install.sh | sudo bash

      - name: Login to Koyeb
        env:
          KOYEB_API_KEY: ${{ secrets.KOYEB_API_KEY }}
        run: |
          koyeb login --api-key "${KOYEB_API_KEY}"

      - name: Inject image into Koyeb manifest and deploy
        run: |
          # The workflow built and pushed an image into GHCR and set IMAGE in the environment
          echo "Preparing deployment manifest with image: $IMAGE"
          python3 - <<PY
import os, yaml
img = os.environ.get('IMAGE')
f = 'koyeb.yaml'
data = None
with open(f) as fh:
    data = yaml.safe_load(fh)
# Inject image at service level for the first service
if data and 'services' in data and len(data['services'])>0:
    data['services'][0]['image'] = img
with open('deploy-koyeb.yaml','w') as out:
    yaml.safe_dump(data, out)
print('Wrote deploy-koyeb.yaml')
PY
          koyeb deploy -f ./deploy-koyeb.yaml
